name: win-only
on:
  workflow_dispatch: {}
  push:
    branches: [ master ]

jobs:
  win:
    runs-on: windows-2022
    env:
      BUILD_TYPE: Release

    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup MSVC x64
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      # 🔧 關鍵修正：鎖 aqt 與 Qt 版本，避免 6.7.3 + aqt 3.3.0 的相容性問題
      - name: Install Qt 6.7.2 (MSVC 2022 x64)
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.7.2'                 # ← 改用 6.7.2（穩）
          host: 'windows'
          arch: 'win64_msvc2022_64'
          aqtversion: '==3.2.*'           # ← 鎖 aqt 到 3.2.x
          cache: true
          # 如程式有用到 QML/Widgets/Network 等，通常不必額外列 modules，預設會裝 qtbase

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v2

      - name: Setup Ninja
        uses: seanmiddleditch/gha-setup-ninja@v4

      - name: Configure
        shell: pwsh
        run: >
          cmake -S . -B build -G "Ninja"
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          -DCMAKE_PREFIX_PATH="$env:Qt6_DIR"

      - name: Build
        run: cmake --build build --parallel

      - name: Find built EXE
        id: findexe
        shell: pwsh
        run: |
          $exe = Get-ChildItem -Recurse -Path build -Filter "*.exe" |
                 Where-Object { $_.FullName -match "input-leap\.exe$" -or $_.Name -match "input" } |
                 Select-Object -First 1
          if (-not $exe) { throw "No EXE found under build/" }
          "exe=$($exe.FullName)" >> $env:GITHUB_OUTPUT
          Write-Host "EXE => $($exe.FullName)"

      - name: Deploy Qt runtime (windeployqt)
        shell: pwsh
        run: |
          & "$env:IQTA_TOOLS\bin\windeployqt.exe" "${{ steps.findexe.outputs.exe }}" --release --compiler-runtime

      - name: Package (zip)
        shell: pwsh
        run: |
          $out = "dist"
          New-Item -ItemType Directory -Force -Path $out | Out-Null
          Copy-Item -Recurse -Force (Split-Path "${{ steps.findexe.outputs.exe }}")"\*" $out\
          Compress-Archive -Path $out\* -DestinationPath input-leap-windows.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: input-leap-windows
          path: |
            input-leap-windows.zip
